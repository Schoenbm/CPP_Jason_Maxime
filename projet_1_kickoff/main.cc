#include "distance_map.hh"
#include "image2d.hh"

#include <iostream> // std::cout


constexpr int input_image_buffer[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, //
                                      0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, //
                                      0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, //
                                      0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, //
                                      0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, //
                                      0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, //
                                      0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, //
                                      0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, //
                                      0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, //
                                      0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, //
                                      0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, //
                                      0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, //
                                      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1};

constexpr std::size_t expected_output_image_buffer[] = {13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 4, 4, 5, 6, 7, //
                                                        12, 11, 10, 9,  8, 7, 6, 5, 4, 3, 2, 2, 3, 3, 3, 4, 5, 6, //
                                                        11, 10, 9,  8,  7, 6, 5, 4, 3, 2, 1, 1, 2, 2, 2, 3, 4, 5, //
                                                        10, 9,  8,  7,  6, 5, 4, 3, 2, 1, 0, 0, 1, 1, 1, 2, 3, 4, //
                                                        9,  8,  7,  6,  5, 4, 3, 2, 3, 2, 1, 0, 0, 0, 0, 1, 2, 3, //
                                                        8,  7,  6,  5,  4, 3, 2, 1, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, //
                                                        7,  6,  5,  4,  3, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 2, 3, //
                                                        6,  5,  4,  3,  3, 2, 1, 0, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4, //
                                                        5,  4,  3,  2,  3, 2, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 2, 3, //
                                                        4,  3,  2,  1,  2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, //
                                                        3,  2,  1,  0,  1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, //
                                                        3,  2,  1,  0,  1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, //
                                                        3,  2,  1,  0,  0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, //
                                                        2,  1,  0,  0,  0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 2, //
                                                        1,  0,  0,  0,  0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 2, //
                                                        1,  0,  0,  0,  0, 1, 1, 2, 1, 0, 1, 1, 2, 2, 1, 1, 2, 3, //
                                                        2,  1,  0,  0,  0, 1, 2, 2, 1, 0, 1, 1, 2, 2, 1, 0, 1, 2, //
                                                        3,  2,  1,  0,  1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 2, //
                                                        3,  2,  1,  1,  1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, //
                                                        2,  1,  0,  0,  0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, //
                                                        1,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, //
                                                        2,  1,  1,  1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0};


int main()
{
  const box2d my_domain(22, 18);

  const image2d<int>         input_image(my_domain, input_image_buffer);
  const image2d<std::size_t> expected_output_image(my_domain, expected_output_image_buffer);

  std::cout << input_image << "---\n";
  std::cout << expected_output_image << "---\n";

  const auto dmap = distance_map(input_image);
  std::cout << dmap << "---\n";

  std::cout << "Distance map OK ? " << (expected_output_image == dmap ? "yes" : "no") << std::endl;

  return 0;
}
